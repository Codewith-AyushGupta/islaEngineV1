name: Deploy to AWS Lambda

on:
  workflow_dispatch:


env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: duckdbautomationv3
  LAMBDA_IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.POC_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.POC_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repository if not exists
      run: |
        aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
        aws ecr create-repository --repository-name $ECR_REPOSITORY

    - name: Set up QEMU for ARM emulation
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: |
          network=host

    - name: Build and push ARM64 Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker buildx build --platform linux/arm64 \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$LAMBDA_IMAGE_TAG \
          --push .

    - name: Install Serverless Framework
      run: npm install -g serverless@3

    - name: Deploy with Serverless
      run: sls deploy  --stage poc
